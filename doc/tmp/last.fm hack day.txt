2008-12-03, 00:22:44

now for music hack day 2009

 =============
 = blog post =
 =============

- personalised planet music: A personalised music news ticker service that keeps you informed about stuff you care about. 
- aggregated from thousands of music blogs
- Your taste changes, so your ticker service should adapt. 
  - Don't subscribe to specific blogs, or even specific topics (keyword searches, ...); 
  - instead use Last.fm to keep track of your current habits
  -> no work, always up to date.
- initially this will be a simple artist name search; in the future it might employ more complex kinds of filtering techniques (which may also means none of your top artists may need to be mentioned in a blog post for it to be considered worthy to include)

good links:
- http://musicfeeds.screamorap.org/?q=Damu+The+Fudgemunk
- http://musicfeeds.screamorap.org/?q=%22Mr+Hudson%22

 =======
 = now =
 ======= 

- /contact/: 
  - send email?
    -> on submit:
    - email self, with submission details + form for /admin/submit/:
      - blog url in editable input field, with 'submit' button -> queue in batchimports
      - all other fields as text
  - spam detection? check dekstop.de contact form
- /admin/
  - /admin/usercomments/
    - list last 500 (?) comments

- export matching blogs/feeds as OPML
- publish sources (as static page, as opml so people can subscribe) -- title, link

- facets:
  - how to build faceted search queries?
  - set up category, feed id, maybe others, as facets
    -> search result will include facet breakdown of result
  - enable faceting, add facet field names to solr query
  - result UI includes links to filters (e.g. as text below search form)
  - later: allow multiple facet values per search
  
Potential features:
- faceting on author-provided categories
- display facet document count as background colour (heatmap-style)

- lots of html markup/microfotmats!
  - "canonical URL" and other quoting techniques -> to annotate that we're just a republisher
  - hatom
  - enclosure/media links microformats? (use the mimetypes!)
  - search/query microformats?
  
  check out acts_as_solr: dynamic field types


 ===========
 = sources =
 ===========

more music feeds:
- wiretapped links!
- artist feeds! (myspace, ...? -> check musicbrainz for lastfm top 10k artists)
- thor!
- "the echo nest claims to mine a lot of blogs"
  - http://developer.echonest.com/docs/method/get_blogs/
- crawl http://www.twingly.com/ searches ("mp3", last.fm top 1000 artists, ...)
- others?


 ========
 = todo =
 ========

- limit search results to music-specific feeds
  - in Solr? disadvantages: 
    - gets assigned at index time, so adding existing feeds to a new user will require re-indexing those feeds
      -> e.g., queue of feeds/entries that have to be reindexed
    - when indexing: need to load all linked usernames for each individual entry
  - in DB? disadvantages: 
    - need to get more rows from Solr so we can filter (-> how much is Solr search performance affected by really long resultset limits?) 
    - will become more and more inefficient as the amount of aggregated non-music feeds grows
  -> this is a scalability problem. very similar: how do we make user tags searchable/browsable? (probably: separate lucene index)

- ensure constructed queries don't violate solr query syntax/result in solr errors
  - empty query strings
  - malformed expressions, e.g. dangling brackets: "Sunn O)))", incomplete expressions: "OR"
      - can we escape these? (seems doublequotes work, but then don't forget to escape doublequote characters within query strings.) 
      - or use a more basic query parser?

- http://www.feedparser.org/docs/html-sanitization.html

- good artist search
  - don't index HTML/XML tags! -> check what HTMLStripStandardTokenizer does. maybe write custom tokenizer. we want to:
    - strip html/xml tags to convert to plaintext
    - ignore link URLs, but include image alt/title attributes
  - specialised lucene index fields for artist name matching
  - get artist name synonyms from musicbrainz
  - check out freebase too for spellings/searchable data (they have MBIDs)
  - better scoring
    - +2 when in title
    - +1 when in content/summary
    - normal score for any other fields (e.g. link URL)

performance
- write simple profiling toolkit, show in footer (only with dev cookie)
- postgres
  - read up on postgres EXPLAIN, create some indices
- solr:
  - limit memory usage (atm: 500MB) http://www.nabble.com/Debugging-Solr-memory-usage-heap-problems-to8832794.html#a8832794
  - find good tradeoffs for solr commit/optimise frequency, cf. http://drupal.org/node/292662
  - read up on queryResultCache, documentCache, filterCache
  - warm up using top n last.fm artists

- don't show too many entries from the same source if we have enough search results for one page
  - can solr group/facet by feed?
  - atm: only show n entries from same feed in a row

- ensure we never show php warnings/errors, instead log them (+ URL/state) and display a friendly error page

- can we optimise to a degree where 500+ artists get matched in sub-second response times?


 ========
 = bugs =
 ========

why does this post:
 http://musicfeeds.screamorap.org/?q=category%3A%22Fallen+angles%22

show up here:
 http://musicfeeds.screamorap.org/?q=category%3A%22Fallen+angles%22
 http://musicfeeds.screamorap.org/?q=category%3A%22DJ+Limpdick%22
 http://musicfeeds.screamorap.org/?q=category%3A%22Risen+apes%22

but not here:
 http://musicfeeds.screamorap.org/?q=category%3A%22Beware+the+cougar%22
 http://musicfeeds.screamorap.org/?q=category%3A%22Older+women+are+the+pits%22

-> all are 3-word category names

- solr query length limit
- limit lastfm top artists (avoid really long queries)
- can we control/increase solr query length limit? how high is it?
- car0lus: empty results?!
- we can't really query during indexing/compacting -> ??
- times out: http://musicfeeds.screamorap.org/?q=feed_id%3A2267 (all/most feed links), http://192.168.55.56/musicfeeds/ (homepage!)

